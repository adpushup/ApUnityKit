apply plugin: 'com.android.library'


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation(name: 'androidx.fragment.fragment-1.0.0', ext:'aar')
    implementation(name: 'androidx.lifecycle.lifecycle-livedata-core-2.1.0', ext:'aar')
    implementation(name: 'androidx.asynclayoutinflater.asynclayoutinflater-1.0.0', ext:'aar')
    implementation(name: 'com.google.android.gms.play-services-ads-base-21.0.0', ext:'aar')
    implementation(name: 'androidx.core.core-1.6.0', ext:'aar')
    implementation(name: 'com.google.android.gms.play-services-measurement-sdk-api-20.1.2', ext:'aar')
    implementation(name: 'androidx.legacy.legacy-support-core-utils-1.0.0', ext:'aar')
    implementation(name: 'androidx.sqlite.sqlite-framework-2.1.0', ext:'aar')
    implementation(name: 'androidx.lifecycle.lifecycle-runtime-2.4.1', ext:'aar')
    implementation(name: 'com.google.android.gms.play-services-appset-16.0.1', ext:'aar')
    implementation(name: 'googlemobileads-native-unity', ext:'aar')
    implementation(name: 'com.google.android.gms.play-services-basement-18.0.0', ext:'aar')
    implementation(name: 'androidx.work.work-runtime-2.7.0', ext:'aar')
    implementation(name: 'androidx.sqlite.sqlite-2.1.0', ext:'aar')
    implementation(name: 'com.google.android.gms.play-services-base-18.0.0', ext:'aar')
    implementation(name: 'androidx.lifecycle.lifecycle-viewmodel-2.0.0', ext:'aar')
    implementation(name: 'com.google.android.gms.play-services-ads-lite-21.0.0', ext:'aar')
    implementation(name: 'androidx.localbroadcastmanager.localbroadcastmanager-1.0.0', ext:'aar')
    implementation(name: 'androidx.documentfile.documentfile-1.0.0', ext:'aar')
    implementation(name: 'com.google.android.gms.play-services-tasks-18.0.1', ext:'aar')
    implementation(name: 'androidx.customview.customview-1.0.0', ext:'aar')
    implementation(name: 'androidx.startup.startup-runtime-1.1.1', ext:'aar')
    implementation(name: 'com.google.android.gms.play-services-measurement-base-20.1.2', ext:'aar')
    implementation(name: 'androidx.loader.loader-1.0.0', ext:'aar')
    implementation(name: 'androidx.viewpager.viewpager-1.0.0', ext:'aar')
    implementation(name: 'androidx.interpolator.interpolator-1.0.0', ext:'aar')
    implementation(name: 'com.google.android.gms.play-services-ads-21.0.0', ext:'aar')
    implementation(name: 'googlemobileads-unity', ext:'aar')
    implementation(name: 'androidx.legacy.legacy-support-core-ui-1.0.0', ext:'aar')
    implementation(name: 'androidx.coordinatorlayout.coordinatorlayout-1.0.0', ext:'aar')
    implementation(name: 'androidx.annotation.annotation-experimental-1.1.0', ext:'aar')
    implementation(name: 'androidx.versionedparcelable.versionedparcelable-1.1.1', ext:'aar')
    implementation(name: 'com.google.android.ump.user-messaging-platform-2.0.0', ext:'aar')
    implementation(name: 'androidx.print.print-1.0.0', ext:'aar')
    implementation(name: 'androidx.slidingpanelayout.slidingpanelayout-1.0.0', ext:'aar')
    implementation(name: 'com.google.android.gms.play-services-ads-identifier-18.0.0', ext:'aar')
    implementation(name: 'androidx.arch.core.core-runtime-2.1.0', ext:'aar')
    implementation(name: 'androidx.swiperefreshlayout.swiperefreshlayout-1.0.0', ext:'aar')
    implementation(name: 'androidx.drawerlayout.drawerlayout-1.0.0', ext:'aar')
    implementation(name: 'androidx.tracing.tracing-1.0.0', ext:'aar')
    implementation(name: 'androidx.lifecycle.lifecycle-service-2.1.0', ext:'aar')
    implementation(name: 'androidx.browser.browser-1.0.0', ext:'aar')
    implementation(name: 'androidx.cursoradapter.cursoradapter-1.0.0', ext:'aar')
    implementation(name: 'androidx.lifecycle.lifecycle-livedata-2.1.0', ext:'aar')
    implementation(name: 'androidx.room.room-runtime-2.2.5', ext:'aar')
    implementation(name: 'androidx.lifecycle.lifecycle-process-2.4.1', ext:'aar')
    implementation project('GoogleMobileAdsPlugin.androidlib')

}

android {
    compileSdkVersion 30

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        minSdkVersion 22
        targetSdkVersion 30
        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a'
        }
        consumerProguardFiles 'proguard-unity.txt'
    }


}

def getSdkDir() {
    Properties local = new Properties()
    local.load(new FileInputStream("${rootDir}/local.properties"))
    return local.getProperty('sdk.dir')
}

def BuildIl2Cpp(String workingDir, String configuration, String architecture, String abi, String[] staticLibraries) {
    def commandLineArgs = []
    commandLineArgs.add("--compile-cpp")
    commandLineArgs.add("--platform=Android")
    commandLineArgs.add("--architecture=" + architecture)
    commandLineArgs.add("--outputpath=" + workingDir + "/src/main/jniLibs/" + abi + "/libil2cpp.so")
    commandLineArgs.add("--libil2cpp-static")
    commandLineArgs.add("--baselib-directory=" + workingDir + "/src/main/jniStaticLibs/" + abi)
    commandLineArgs.add("--incremental-g-c-time-slice=3")
    commandLineArgs.add("--configuration=" + configuration)
    commandLineArgs.add("--dotnetprofile=unityaot-linux")
    commandLineArgs.add("--profiler-report")
    commandLineArgs.add("--profiler-output-file=" + workingDir + "/build/il2cpp_"+ abi + "_" + configuration + "/il2cpp_conv.traceevents")
    commandLineArgs.add("--print-command-line")
    commandLineArgs.add("--generatedcppdir=" + workingDir + "/src/main/Il2CppOutputProject/Source/il2cppOutput")
    commandLineArgs.add("--cachedirectory=" + workingDir + "/build/il2cpp_"+ abi + "_" + configuration + "/il2cpp_cache")
    commandLineArgs.add("--tool-chain-path=" + android.ndkDirectory)
    staticLibraries.eachWithIndex {fileName, i->
        commandLineArgs.add("--additional-libraries=" + workingDir + "/src/main/jniStaticLibs/" + abi + "/" + fileName)
    }
    def executableExtension = ""
    if (org.gradle.internal.os.OperatingSystem.current().isWindows())
        executableExtension = ".exe"
    exec {
        executable workingDir + "/src/main/Il2CppOutputProject/IL2CPP/build/deploy/il2cpp" + executableExtension
        args commandLineArgs
        environment "ANDROID_SDK_ROOT", getSdkDir()
    }
    delete workingDir + "/src/main/jniLibs/" + abi + "/libil2cpp.sym.so"
    ant.move(file: workingDir + "/src/main/jniLibs/" + abi + "/libil2cpp.dbg.so", tofile: workingDir + "/symbols/" + abi + "/libil2cpp.so")
}

android {

    packagingOptions {
        jniLibs {
            keepDebugSymbols += ['*/armeabi-v7a/*.so', '*/arm64-v8a/*.so']
        }
    }
    task BuildIl2CppTask {
        doLast {
              BuildIl2Cpp(projectDir.toString().replaceAll('\\\\', '/'), 'Release', 'armv7', 'armeabi-v7a', [  ] as String[]);
              BuildIl2Cpp(projectDir.toString().replaceAll('\\\\', '/'), 'Release', 'arm64', 'arm64-v8a', [  ] as String[]);
        }
    }
    afterEvaluate {
        if (project(':unityLibrary').tasks.findByName('mergeDebugJniLibFolders'))
            project(':unityLibrary').mergeDebugJniLibFolders.dependsOn BuildIl2CppTask
        if (project(':unityLibrary').tasks.findByName('mergeReleaseJniLibFolders'))
            project(':unityLibrary').mergeReleaseJniLibFolders.dependsOn BuildIl2CppTask
    }
    androidResources {
        ignoreAssetsPattern '!.svn:!.git:!.ds_store:!*.scc:.*:!CVS:!thumbs.db:!picasa.ini:!*~'
        noCompress '[\'.unity3d\', \'.ress\', \'.resource\', \'.obb\', \'.bundle\', \'.unityexp\'] + unityStreamingAssets.tokenize(\', \')'
    }
    lint {
        abortOnError false
    }
}



